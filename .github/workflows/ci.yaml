name: ci

on:
  pull_request

env:
  TF_VERSION: 0.12.26
  STACKS: "aaa bbb ccc"

jobs:
  ci:
    name: ci-terraform
    runs-on: ubuntu-latest

    steps:

    - name: Pull code
      uses: actions/checkout@v2

    - name: Install terraform
      uses: hashicorp/setup-terraform@v1.1.0
      with:
        terraform_wrapper: false
        terraform_version: 0.12.26

    - name: Unlock secrets
      env:
        GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
      run: |
        sudo apt-get install -y git-crypt
        echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt-key
        git-crypt unlock ./git-crypt-key
        rm ./git-crypt-key

    - name: Run terraform plan
      run: |
        for stack in ${STACKS}
        do
        (
          cd stack-${stack}
          terraform init -no-color
          terraform plan -no-color -out planfile > plan.out
          terraform show -no-color -json planfile > plan.json
        )
        done

    - name: Process terraform plan
      id: plan
      run: |
        for stack in ${STACKS}
        do
        (
          cd stack-${stack}
          changes=$(cat plan.json | jq -r '[.resource_changes[]? | { resource: .address, action: .change.actions[] } | select (.action != "no-op")]')
          summary=$(echo $changes | jq -r '.   | "Stack <strong>'"$stack"'</strong> has <strong>\(length)</strong> changes"')
          details=$(echo $changes | jq -r '.[] | "<li><code>\(.resource)</code> will be <strong>\(.action)d</strong></li>"')

          echo "<details><summary>$summary</summary><ul>${details}</ul></details>" >> ../plan.log
        )
        done

        echo ::set-output name=log::$(cat plan.log)

    - name: Confirm success
      if: success()
      uses: peter-evans/create-or-update-comment@v1.4.2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number:  ${{ github.event.number }}
        body: |
          ### Terraform plan succeeded!

          A summary of the changes is shown below:

          ${{ steps.plan.outputs.log }}
          
          *You can see the complete command output [here](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})*

    - name: Confirm failure
      if: failure()
      uses: peter-evans/create-or-update-comment@v1.4.2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number:  ${{ github.event.number }}
        body: |
          ### Terraform plan failed!

          Check the logs [here](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})